import java.util.HashSet;
import java.util.Scanner;

public class LongestConsecutiveSequence {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Prompt for the number of elements in the array
        System.out.println("Enter the number of elements in the array:");
        int N = scanner.nextInt();
        
        // Initialize the array
        int[] array = new int[N];
        
        // Prompt for the array elements
        System.out.println("Enter the array elements:");
        for (int i = 0; i < N; i++) {
            array[i] = scanner.nextInt();
        }
        
        // Find the length of the longest consecutive sequence
        int longestConsecutiveSequence = findLongestConsecutiveSequence(array);
        
        // Output the results
        System.out.println("The length of the longest consecutive sequence is " + longestConsecutiveSequence);
        System.out.println("The length of the array is " + N);
        
        scanner.close();
    }
    
    private static int findLongestConsecutiveSequence(int[] nums) {
        if (nums.length == 0) {
            return 0;
        }
        
        HashSet<Integer> numSet = new HashSet<>();
        for (int num : nums) {
            numSet.add(num);
        }
        
        int longestStreak = 0;
        
        for (int num : nums) {
            // Only check for the beginning of a sequence
            if (!numSet.contains(num - 1)) {
                int currentNum = num;
                int currentStreak = 1;
                
                while (numSet.contains(currentNum + 1)) {
                    currentNum += 1;
                    currentStreak += 1;
                }
                
                longestStreak = Math.max(longestStreak, currentStreak);
            }
        }
        
        return longestStreak;
    }
}
